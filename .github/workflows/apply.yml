name: Terragrunt Apply

on:
  push:
    branches:
      - main
env:
  TF_VAR_WEBHOOK_PATH: ${{ secrets.WEBHOOK_PATH }}
  TF_VAR_github_token: ${{ secrets.TF_VAR_github_token }}
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  TERRAGRUNT_VERSION: 0.67.16
  TERRAFORM_VERSION: 1.9.8

permissions:
  id-token: write
  contents: read

jobs:
  apply:
    name: Terragrunt Apply
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: [keeping, scheduling]
        include:
          - environment: keeping
            path: terragrunt/environments/keeping
          - environment: scheduling
            path: terragrunt/environments/scheduling

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Find PR associated with the commit
        id: pr_search
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          PR_NUMBER="$(git log -1 --pretty=format:%B | grep 'Merge pull request #' | cut -d '#' -f2 | cut -d ' ' -f1)"
          echo "Associated PR number is ${PR_NUMBER}"
          echo "pr_number=${PR_NUMBER}" >> "$GITHUB_OUTPUT"
          
      - name: Get PR labels
        id: pr_labels
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          PR_NUMBER=${{ steps.pr_search.outputs.pr_number }}
          LABELS="$(gh pr view $PR_NUMBER --json labels --jq '.labels[].name'| tr '\n' ' ')"
          echo "Labels are ${LABELS}"
          echo "labels=${LABELS}" >> "$GITHUB_OUTPUT"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/minecraft-test-github-actions
          role-session-name: github-actions-terragrunt-session
          aws-region: ap-northeast-1

      - name: Setup aqua
        uses: aquaproj/aqua-installer@v3.1.2
        with:
          aqua_version: v2.30.0

      - name: Install tools via aqua
        run: aqua install --all

      - name: Setup Terragrunt
        run: |
          curl -Lo terragrunt https://github.com/gruntwork-io/terragrunt/releases/download/v${{ env.TERRAGRUNT_VERSION }}/terragrunt_linux_amd64
          chmod +x terragrunt
          sudo mv terragrunt /usr/local/bin/

      - name: Create Mapping Yaml for scheduling
        if: ${{ matrix.environment == 'scheduling' && !contains(steps.pr_labels.outputs.labels, 'no-apply') }}
        working-directory: terraform/scheduling
        run: |
          cat << EOF > secrets.yaml
          OPS: ${{ secrets.WHITELIST_PLAYERS }}
          WHITELIST: ${{ secrets.WHITELIST_PLAYERS }}
          WEBHOOK_PATH: ${{ secrets.WEBHOOK_PATH }}
          S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}
          S3_PREFIX_NAME: ${{ secrets.S3_PREFIX_NAME }}
          FILTERING_STRINGS: ${{ secrets.FILTERING_STRINGS }}
          EOF

      - name: Check for relevant changes
        id: changes
        run: |
          DIFF=$(git diff --name-only HEAD^ terragrunt/ terraform/modules terraform/keeping terraform/scheduling)
          if [[ -n "${DIFF}" ]]; then
            echo "changes=true" >> "$GITHUB_OUTPUT"
            echo "Changed files: ${DIFF}"
          else
            echo "changes=false" >> "$GITHUB_OUTPUT"
            echo "No relevant changes detected"
          fi

      - name: Terragrunt Apply
        if: ${{ steps.changes.outputs.changes == 'true' && !contains(steps.pr_labels.outputs.labels, 'no-apply') }}
        working-directory: ${{ matrix.path }}
        run: |
          echo "Applying ${{ matrix.environment }} environment..."
          terragrunt apply --terragrunt-non-interactive -auto-approve
        env:
          TF_VAR_aws_account_id: ${{ env.AWS_ACCOUNT_ID }}

      - name: Slack Notification on Success
        if: ${{ success() && steps.changes.outputs.changes == 'true' }}
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: https://hooks.slack.com/services/${{ secrets.WEBHOOK_PATH }}
          SLACK_USERNAME: TerragruntBot
          SLACK_TITLE: "Terragrunt Apply Success - ${{ matrix.environment }}"
          SLACK_COLOR: good
          SLACK_MESSAGE: "${{ matrix.environment }} environment applied successfully ðŸš€"

      - name: Slack Notification on Failure
        if: ${{ failure() && steps.changes.outputs.changes == 'true' }}
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: https://hooks.slack.com/services/${{ secrets.WEBHOOK_PATH }}
          SLACK_USERNAME: TerragruntBot
          SLACK_TITLE: "Terragrunt Apply Failed - ${{ matrix.environment }}"
          SLACK_COLOR: danger
          SLACK_MESSAGE: "${{ matrix.environment }} environment apply failed ðŸ˜¢"
