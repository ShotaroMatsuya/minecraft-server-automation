name: Terraform Continuous Integration By Official

on:
  pull_request:
    branches:
      - main
env:
  TF_VAR_WEBHOOK_PATH: ${{secrets.WEBHOOK_PATH}}
  TF_VAR_env_files: ${{secrets.ENV_FILES}}
jobs:
  terraform-ci:
    name: Terraform CI
    permissions:
      actions: read
      contents: read
      pull-requests: write
      security-events: write
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dir: [
          terraform/scheduling,
          terraform/keeping
        ]

    steps:
      - name: Checkout code
        id: checkout
        uses: actions/checkout@v2
      - name: Check diff
        id: diff
        uses: technote-space/get-diff-action@v4.2.0
        with:
          PATTERNS: |
            terraform/modules/**/*.tf
            ${{ matrix.dir }}/**/*.tf

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

        
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.4.1

      - name: Check format
        id: fmt
        if: steps.diff.outputs.diff
        run: terraform fmt -check -recursive
        working-directory: ${{ matrix.dir }}
        continue-on-error: true

      - name: Initialize
        id: init
        if: steps.diff.outputs.diff
        run: terraform init -lock=false -upgrade
        working-directory: ${{ matrix.dir }}

      - name: Download modules
        if: steps.diff.outputs.diff
        run: terraform get
        working-directory: ${{ matrix.dir }}

      - name: Validate
        if: steps.diff.outputs.diff
        run: terraform validate
        working-directory: ${{ matrix.dir }}

      - name: Plan
        if: steps.diff.outputs.diff
        id: plan
        run: terraform plan -no-color -lock=false
        working-directory: ${{ matrix.dir }}
        continue-on-error: true

      - name: Comment
        if: steps.diff.outputs.diff
        uses: actions/github-script@v3.2.0
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `## \`${{ matrix.dir }}\`
            #### Terraform Format and Style ðŸ–Œ\`${{ steps.fmt.outcome }}\`
            #### Terraform Plan ðŸ“–\`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`${process.env.PLAN}\`\`\`

            </details>`;

            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
            
      - name: TFLint
        uses: reviewdog/action-tflint@master
        with:
          github_token: ${{ secrets.github_token }}
          working_directory: ./terraform
          reporter: github-pr-review
          filter_mode: nofilter
          fail_on_error: true
          tflint_version: "v0.24.0"

      - name: tfsec-commenter
        uses: aquasecurity/tfsec-pr-commenter-action@v1.3.1
        with:
          working_directory: ''
          github_token: ${{ github.token }}
          
      - name: tfsec
        uses: aquasecurity/tfsec-sarif-action@v0.1.4
        with:
          sarif_file: tfsec.sarif   
          tfsec_args: --minimum-severity HIGH

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v2
        with:
          # Path to SARIF file relative to the root of the repository
          sarif_file: tfsec.sarif  

