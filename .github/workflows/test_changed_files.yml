name: PR Comment Job Example

permissions:
  contents: read

on:
  issue_comment:
    types: [created]

jobs:
  pr_commented:
    if: github.event.issue.pull_request != '' && contains(github.event.comment.body, '/test')
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/github-script@v6
        id: set-target-branch
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const { data: pr } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
            });
            core.setOutput('base_ref', pr.base.ref);
            core.setOutput('head_ref', pr.head.ref);

      - name: Output refs
        run: |
          echo "Base ref: ${{ steps.set-target-branch.outputs.base_ref }}"
          echo "Head ref: ${{ steps.set-target-branch.outputs.head_ref }}"

      - uses: actions/checkout@v4
        name: Checkout base branch
        with:
          fetch-depth: 100
          ref: ${{ steps.set-target-branch.outputs.base_ref }}

      - uses: actions/checkout@v4
        name: Checkout head branch
        with:
          fetch-depth: 1
          ref: ${{ steps.set-target-branch.outputs.head_ref }}

      - name: Find common ancestor and check diff
        run: |
          git fetch origin main
          git fetch origin ${{ steps.set-target-branch.outputs.head_ref }}
          merge_base=$(git merge-base origin/main ${{ steps.set-target-branch.outputs.head_ref }})
          if [ -z "$merge_base" ]; then
            echo "No merge base found, exiting."
            exit 1
          fi
          echo "Merge base commit: $merge_base"
          files=($(git diff $merge_base ${{ steps.set-target-branch.outputs.head_ref }} --name-only | tr '\n' ' '))
          if [ ${#files[@]} -eq 0 ]; then
            echo "No changes detected."
            exit 0
          fi
          for file in "${files[@]}"; do
            echo "${file}"
          done