name: Terragrunt Drift Detection

on:
  schedule:
    # At 10:00 PM JST
    - cron: "0 13 * * 6,0"

env:
  SLACK_USERNAME: DriftDetectBot
  SLACK_ICON: https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png
  SLACK_WEBHOOK: "https://hooks.slack.com/services/${{ secrets.WEBHOOK_PATH }}"
  TF_VAR_WEBHOOK_PATH: ${{ secrets.WEBHOOK_PATH }}
  TF_VAR_github_token: ${{ secrets.TF_VAR_github_token }}
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  TERRAGRUNT_VERSION: 0.67.16
  TERRAFORM_VERSION: 1.9.8
  AWS_REGION: ap-northeast-1

permissions:
  id-token: write
  contents: read

jobs:
  drift-detection:
    name: Drift Detection
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: [keeping, scheduling]
        include:
          - environment: keeping
            path: terragrunt/environments/keeping
          - environment: scheduling
            path: terragrunt/environments/scheduling

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/minecraft-test-github-actions
          role-session-name: github-actions-terragrunt-drift
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup aqua
        uses: aquaproj/aqua-installer@v3.1.2
        with:
          aqua_version: v2.30.0

      - name: Install tools via aqua
        run: aqua install --all

      - name: Setup Terragrunt
        run: |
          curl -Lo terragrunt https://github.com/gruntwork-io/terragrunt/releases/download/v${{ env.TERRAGRUNT_VERSION }}/terragrunt_linux_amd64
          chmod +x terragrunt
          sudo mv terragrunt /usr/local/bin/

      - name: Create Mapping Yaml for scheduling
        if: matrix.environment == 'scheduling'
        working-directory: terraform/scheduling
        run: |
          cat << EOF > secrets.yaml
          OPS: ${{ secrets.WHITELIST_PLAYERS }}
          WHITELIST: ${{ secrets.WHITELIST_PLAYERS }}
          WEBHOOK_PATH: ${{ secrets.WEBHOOK_PATH }}
          S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}
          S3_PREFIX_NAME: ${{ secrets.S3_PREFIX_NAME }}
          FILTERING_STRINGS: ${{ secrets.FILTERING_STRINGS }}
          EOF

      - name: Terragrunt Plan (Drift Detection)
        id: plan
        working-directory: ${{ matrix.path }}
        run: |
          echo "Running drift detection for ${{ matrix.environment }}..."
          terragrunt plan --terragrunt-non-interactive -detailed-exitcode
        env:
          TF_VAR_aws_account_id: ${{ env.AWS_ACCOUNT_ID }}
        continue-on-error: true

      - name: No Drift Detected
        if: steps.plan.outcome == 'success'
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_TITLE: "✅ No Drift - ${{ matrix.environment }}"
          SLACK_COLOR: good
          SLACK_MESSAGE: "${{ matrix.environment }} environment has no configuration drift"

      - name: Drift Detected
        if: steps.plan.outcome == 'failure'
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_TITLE: "⚠️ Drift Detected - ${{ matrix.environment }}"
          SLACK_COLOR: warning
          SLACK_MESSAGE: "Configuration drift detected in ${{ matrix.environment }} environment. Please review and apply changes if needed."

      - name: Critical Failure
        if: steps.plan.outcome == 'cancelled'
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_TITLE: "❌ Drift Check Failed - ${{ matrix.environment }}"
          SLACK_COLOR: danger
          SLACK_MESSAGE: "Drift detection failed for ${{ matrix.environment }} environment. Please check the workflow logs."
